generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  firstName String
  lastName  String
  email     String     @unique
  role      Role       @default(STUDENT)
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  progress  Progress[]
  teaching  Subject[]  @relation("Teaching")
  subjects  Subject[]  @relation("Subject")
}

model Subject {
  id        String   @id @default(uuid())
  name      String   @unique
  active    Boolean  @default(true)
  teacherId String?
  topicIds  String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  teacher   User?    @relation("Teaching", fields: [teacherId], references: [id])
  topics    Topic[]
  students  User[]   @relation("Subject")
}

model Topic {
  id          String     @id @default(uuid())
  title       String
  description String
  subjectId   String
  videoUrl    String?
  active      Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  students    Progress[]
  subject     Subject    @relation(fields: [subjectId], references: [id])
}

model Progress {
  id        String   @id @default(uuid())
  studentId String
  topicId   String
  completed Boolean  @default(false)
  progress  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  student   User     @relation(fields: [studentId], references: [id])
  topic     Topic    @relation(fields: [topicId], references: [id])
}

model playing_with_neon {
  id    Int    @id @default(autoincrement())
  name  String
  value Float? @db.Real
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}